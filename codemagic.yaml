workflows:
  ios_testflight:
    name: iOS → TestFlight
    max_build_duration: 60
    environment:
      flutter: stable
      xcode: latest
      groups:
        - Apple
      vars:
        BUNDLE_ID: com.carlostechops.mindbreath
        TEAM_ID: LRT5QA283X
        APP_VERSION: 1.0.1

    scripts:
      - name: Get dependencies
        script: flutter pub get

      - name: Install certificate & provisioning profile from env
        script: |
          #!/usr/bin/env bash
          set -euo pipefail
          : "${KEYCHAIN_PASSWORD:?KEYCHAIN_PASSWORD missing}"
          : "${P12_BASE64:?P12_BASE64 missing}"
          : "${P12_PASSWORD:?P12_PASSWORD missing}"
          : "${MOBILEPROVISION_BASE64:?MOBILEPROVISION_BASE64 missing}"

          KEYCHAIN_PATH="$HOME/Library/Keychains/build.keychain-db"
          PROFILES_DIR="$HOME/Library/MobileDevice/Provisioning Profiles"

          security create-keychain -p "$KEYCHAIN_PASSWORD" "$KEYCHAIN_PATH"
          security list-keychains -s "$KEYCHAIN_PATH" ~/Library/Keychains/login.keychain-db /Library/Keychains/System.keychain
          security default-keychain -s "$KEYCHAIN_PATH"
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" "$KEYCHAIN_PATH"
          security set-keychain-settings -lut 21600 "$KEYCHAIN_PATH"

          python3 - <<'PY'
          import base64, os, re
          def write_b64(env_key, out_path):
              raw = re.sub(r'\s+', '', os.environ[env_key])
              with open(out_path, 'wb') as f: f.write(base64.b64decode(raw))
          write_b64('P12_BASE64', 'cert.p12')
          write_b64('MOBILEPROVISION_BASE64', 'MB_AppStore_Profile.mobileprovision')
          PY

          echo "p12 bytes: $(wc -c < cert.p12)"
          echo "mobileprovision bytes: $(wc -c < MB_AppStore_Profile.mobileprovision)"

          if ! openssl pkcs12 -in cert.p12 -legacy -passin pass:"$P12_PASSWORD" -nodes -clcerts -nokeys >/dev/null 2>&1; then
            echo "ERROR: P12_PASSWORD is incorrect for provided P12_BASE64" >&2
            exit 1
          fi

          security import cert.p12 -k "$KEYCHAIN_PATH" -P "$P12_PASSWORD" -A -T /usr/bin/codesign -T /usr/bin/security
          security set-key-partition-list -S apple-tool:,apple: -s -k "$KEYCHAIN_PASSWORD" "$KEYCHAIN_PATH"
          security find-identity -v -p codesigning "$KEYCHAIN_PATH" || true

          mkdir -p "$PROFILES_DIR"
          mv "MB_AppStore_Profile.mobileprovision" "$PROFILES_DIR/MB_AppStore_Profile.mobileprovision"
          echo "✅ Certificate & profile installed"

      - name: Create export options (App Store)
        script: |
          cat > export_options.plist <<'EOF'
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0"><dict>
            <key>method</key><string>app-store</string>
            <key>signingStyle</key><string>manual</string>
            <key>teamID</key><string>LRT5QA283X</string>
            <key>provisioningProfiles</key>
            <dict>
              <key>com.carlostechops.mindbreath</key><string>MB_AppStore_Profile</string>
            </dict>
            <key>destination</key><string>export</string>
          </dict></plist>
          EOF

      - name: Set marketing version & bump build number
        script: |
          /usr/libexec/PlistBuddy -c "Set :CFBundleShortVersionString ${APP_VERSION:-1.0.1}" ios/Runner/Info.plist
          if [ -z "${BUILD_NUMBER:-}" ]; then echo "BUILD_NUMBER is missing"; exit 1; fi
          /usr/libexec/PlistBuddy -c "Set :CFBundleVersion ${BUILD_NUMBER}" ios/Runner/Info.plist
          /usr/libexec/PlistBuddy -c "Print :CFBundleShortVersionString" ios/Runner/Info.plist
          /usr/libexec/PlistBuddy -c "Print :CFBundleVersion" ios/Runner/Info.plist

      # ⛔️ Removed the 'Ensure Xcode build settings align' step

      - name: Build signed IPA (Release)
        script: |
          flutter build ipa \
            --release \
            --export-options-plist=export_options.plist \
            --build-name="${APP_VERSION:-1.0.1}" \
            --build-number="${BUILD_NUMBER}"

    artifacts:
      - build/ios/ipa/*.ipa
      - build/ios/ipa/*.dSYM.zip

    publishing:
      app_store_connect:
        key_id: $APPSTORE_KEY_ID
        issuer_id: $APPSTORE_ISSUER_ID
        api_key: $APPSTORE_PRIVATE_KEY
        submit_to_testflight: true
